import finset.basic
import analysis.normed_space.inner_product

def Tt (T : with_top ‚Ñù) : set ‚Ñù := {t : ‚Ñù | 0 ‚â§ t ‚àß (t : with_top ‚Ñù) < T}
def TœÑ {T : with_top ‚Ñù} (t : Tt T) : set ‚Ñù := {œÑ : ‚Ñù | t.1 < œÑ ‚àß (œÑ : with_top ‚Ñù) ‚â§ T}

def X (ùí© : Type) := ùí© ‚Üí ‚Ñù
instance (ùí© : Type) : has_coe ‚Ñù (X ùí©) := ‚ü®Œª r i, r‚ü©

def debt_fn (ùí© : Type) (T : with_top ‚Ñù) := Œ† (t : Tt T), X ùí© ‚Üí ùí© ‚Üí TœÑ t ‚Üí ‚Ñù

variables {ùí© : Type} [fintype ùí©] [decidable_eq ùí©] [inner_product_space ‚Ñù (X ùí©)] {T : with_top ‚Ñù}

instance : has_subset (Tt T ‚Üí set (X ùí©)) := ‚ü®Œª V‚ÇÅ V‚ÇÇ, (‚àÄ t, V‚ÇÅ t ‚äÜ V‚ÇÇ t)‚ü©

instance : has_zero (debt_fn ùí© T) := pi.has_zero
instance : partial_order (debt_fn ùí© T) := pi.partial_order

def continuous_wrt_assets {Œ± : Tt T ‚Üí Type*} [‚àÄ t, topological_space (Œ± t)]
  (v : Œ† (t : Tt T), X ùí© ‚Üí Œ± t) : Prop :=
‚àÄ t, continuous (v t)

def continuous_off_wrt_assets {Œ± : Tt T ‚Üí Type*} [‚àÄ t, topological_space (Œ± t)]
  {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí Œ± t) : Prop :=
‚àÄ t, continuous (Œª y : (V t)·∂ú, v' t y y.prop)

section
variables (ùí©) (T)

structure well_behaved_soln :=
(‚Ñã : Œ† {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù), (Œ† (t : Tt T), X ùí© ‚Üí TœÑ t ‚Üí ‚Ñù))
(matches_on_complement {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù) :
  ‚àÄ t y h, ‚Ñã v' t y = v' t y h)
(positivity_preserving {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù) :
  (‚àÄ t y h, 0 ‚â§ v' t y h) ‚Üí 0 ‚â§ ‚Ñã v')
(continuity_preserving {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù) :
  continuous_off_wrt_assets v' ‚Üí continuous_wrt_assets (‚Ñã v'))
(translation_invariant {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù) :
  ‚àÄ Œ∑ t y, ‚Ñã v' t (y + Œ∑) = ‚Ñã (Œª s x (h : x + Œ∑ ‚àâ V s), v' s (x + Œ∑) h) t y)
(compatible_on_subsets {V V' : Tt T ‚Üí set (X ùí©)} {v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù} :
  V' ‚äÜ V ‚Üí ‚Ñã v' = ‚Ñã (Œª t y (h : y ‚àâ V' t), ‚Ñã v' t y))
(mono_wrt_val_on_compl {V : Tt T ‚Üí set (X ùí©)} {v‚ÇÅ v‚ÇÇ : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù} :
  (‚àÄ t y h, v‚ÇÅ t y h ‚â§ v‚ÇÇ t y h) ‚Üí ‚Ñã v‚ÇÅ ‚â§ ‚Ñã v‚ÇÇ)

end

instance : has_coe_to_fun (well_behaved_soln ùí© T) :=
{ F := Œª _, Œ† {V : Tt T ‚Üí set (X ùí©)} (v' : Œ† t y, y ‚àâ V t ‚Üí TœÑ t ‚Üí ‚Ñù), (Œ† t, X ùí© ‚Üí TœÑ t ‚Üí ‚Ñù),
  coe := well_behaved_soln.‚Ñã }

variable (‚Ñã : well_behaved_soln ùí© T)

instance : has_coe (finset ùí©) (Tt T ‚Üí X ùí© ‚Üí finset ùí©) := ‚ü®Œª B t y, B‚ü©

def V (œà : finset ùí© ‚Üí Tt T ‚Üí X ùí© ‚Üí finset ùí©) (B : finset ùí©) : Tt T ‚Üí set (X ùí©) :=
Œª t y, œà B t y = B

def v_mk {B : finset ùí©} {œàB : Tt T ‚Üí X ùí© ‚Üí finset ùí©} (hœà : œàB ‚â§ B) :
  (Œ† C < B, debt_fn ùí© T) ‚Üí debt_fn ùí© T :=
Œª v t y i, if i ‚àà B then ‚Ñã (Œª s x h, v (œàB s x) (lt_of_le_of_ne (hœà s x) h) s x i) t y else 0

def v {œà : finset ùí© ‚Üí Tt T ‚Üí X ùí© ‚Üí finset ùí©} (hœà : ‚àÄ B, œà B ‚â§ B) : finset ùí© ‚Üí debt_fn ùí© T :=
finset.strong_induction (Œª B, v_mk ‚Ñã (hœà B))
